import { 
  CASE_STATUS_ENUM, 
  CLAIMS_STATUS_ENUM, 
  ACTION_STATUS_ENUM, 
  USER_ROLE_ENUM,
  CASE_TYPE_ENUM,
  TAB_VIEW_ENUM,
  DETAILED_FINDING_ENUM,
  SPECIAL_FINDING_ENUM
} from './enums';

// API configuration
export const API_BASE_PATH = '/rest/kuk/v1';

// Claims status options 
export const CLAIMS_STATUS: Record<CLAIMS_STATUS_ENUM, CLAIMS_STATUS_ENUM> = {
  [CLAIMS_STATUS_ENUM.FULL_COVER]: CLAIMS_STATUS_ENUM.FULL_COVER,
  [CLAIMS_STATUS_ENUM.PARTIAL_COVER]: CLAIMS_STATUS_ENUM.PARTIAL_COVER,
  [CLAIMS_STATUS_ENUM.DECLINED]: CLAIMS_STATUS_ENUM.DECLINED,
  [CLAIMS_STATUS_ENUM.PENDING]: CLAIMS_STATUS_ENUM.PENDING
};

// Case status options
export const CASE_STATUS_MAPPING = {
  [CASE_STATUS_ENUM.OPEN]: CASE_STATUS_ENUM.OPEN,
  [CASE_STATUS_ENUM.IN_PROGRESS]: CASE_STATUS_ENUM.IN_PROGRESS,
  [CASE_STATUS_ENUM.COMPENSATED]: CASE_STATUS_ENUM.COMPENSATED,
  [CASE_STATUS_ENUM.CLOSED]: CASE_STATUS_ENUM.CLOSED
};

// Case types
export const CASE_TYPES: Record<CASE_TYPE_ENUM, CASE_TYPE_ENUM> = {
  [CASE_TYPE_ENUM.USER_QUARTERLY]: CASE_TYPE_ENUM.USER_QUARTERLY,
  [CASE_TYPE_ENUM.PREVIOUS_QUARTER_RANDOM]: CASE_TYPE_ENUM.PREVIOUS_QUARTER_RANDOM
};

// Tab view constants for easier access
export const TAB_VIEWS = {
  AUDIT_LOG: TAB_VIEW_ENUM.AUDIT_LOG,
  IKS: TAB_VIEW_ENUM.IKS
} as const;

// Display names for tabs
export const TAB_VIEWS_DISPLAY = {
  [TAB_VIEW_ENUM.AUDIT_LOG]: "Audit Log",
  [TAB_VIEW_ENUM.IKS]: "IKS"
} as const;

// Action status constants for async operations
export const ACTION_STATUS: Record<ACTION_STATUS_ENUM, ACTION_STATUS_ENUM> = {
  [ACTION_STATUS_ENUM.IDLE]: ACTION_STATUS_ENUM.IDLE,
  [ACTION_STATUS_ENUM.LOADING]: ACTION_STATUS_ENUM.LOADING,
  [ACTION_STATUS_ENUM.SUCCEEDED]: ACTION_STATUS_ENUM.SUCCEEDED,
  [ACTION_STATUS_ENUM.FAILED]: ACTION_STATUS_ENUM.FAILED
};

// Finding types - Split into detailed and special findings
export const DETAILED_FINDING_TYPES: Record<DETAILED_FINDING_ENUM, string> = {
  [DETAILED_FINDING_ENUM.FACTS_INCORRECT]: "Facts incorrect",
  [DETAILED_FINDING_ENUM.TERMS_INCORRECT]: "Terms incorrect",
  [DETAILED_FINDING_ENUM.COVERAGE_INCORRECT]: "Coverage incorrect",
  [DETAILED_FINDING_ENUM.ADDITIONAL_COVERAGE_MISSED]: "Additional coverage missed",
  [DETAILED_FINDING_ENUM.DECISION_NOT_COMMUNICATED]: "Decision not communicated",
  [DETAILED_FINDING_ENUM.COLLECTION_INCORRECT]: "Collection incorrect",
  [DETAILED_FINDING_ENUM.RECOURSE_WRONG]: "Recourse wrong",
  [DETAILED_FINDING_ENUM.COST_RISK_WRONG]: "Cost risk wrong",
  [DETAILED_FINDING_ENUM.BPR_WRONG]: "BPR wrong",
  [DETAILED_FINDING_ENUM.COMMUNICATION_POOR]: "Communication poor"
};

export const SPECIAL_FINDING_TYPES: Record<SPECIAL_FINDING_ENUM, string> = {
  [SPECIAL_FINDING_ENUM.FEEDBACK]: "Feedback",
  [SPECIAL_FINDING_ENUM.COMMUNICATION]: "Communication",
  [SPECIAL_FINDING_ENUM.RECOURSE]: "Recourse",
  [SPECIAL_FINDING_ENUM.NEGOTIATION]: "Negotiation",
  [SPECIAL_FINDING_ENUM.PERFECT_TIMING]: "Perfect timing"
};

// Coverage amount limits by user role
export const COVERAGE_LIMITS = {
  [USER_ROLE_ENUM.STAFF]: 30000,
  [USER_ROLE_ENUM.SPECIALIST]: 150000,
  [USER_ROLE_ENUM.TEAM_LEADER]: 150000, // Same as specialist
  DEFAULT: 10000
};

// Quarter calculation constants
export const QUARTER_CALCULATIONS = {
  MONTHS_PER_QUARTER: 3,
  QUARTER_OFFSET: 1,
  MIN_QUARTER: 1,
  MAX_QUARTER: 4,
  RANDOM_DAY_LIMIT: 28
};